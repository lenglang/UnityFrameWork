using UnityEngine;
using System.Collections;

public class CommonBSJJ : StateMachineBehaviour {

	 // OnStateEnter is called when a transition starts and the state machine starts to evaluate this state
    private int _count=0;
    override public void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
    {
        _count = 0;
        TeaManager._instance.PlayRefuseSound();
    }
	// OnStateUpdate is called on each Update frame between OnStateEnter and OnStateExit callbacks
    override public void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
    {
        if (stateInfo.normalizedTime - _count > 1)
        {
            _count++;
            if (TeaManager._instance.dragFood == null)
            {
                if (stateInfo.IsName("BSJJ"))
                {
                    animator.SetBool("BSJJ", false);
                }
                else
                {
                    animator.SetBool("HYT", false);
                }
            }
            else
            { TeaManager._instance.PlayRefuseSound(); }
        }
    }
	// OnStateExit is called when a transition ends and the state machine finishes evaluating this state
	//override public void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) {
	//
	//}

	// OnStateMove is called right after Animator.OnAnimatorMove(). Code that processes and affects root motion should be implemented here
	//override public void OnStateMove(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) {
	//
	//}

	// OnStateIK is called right after Animator.OnAnimatorIK(). Code that sets up animation IK (inverse kinematics) should be implemented here.
	//override public void OnStateIK(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) {
	//
	//}
}
